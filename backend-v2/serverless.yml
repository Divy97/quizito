service: quizito-backend-v2

plugins:
  - serverless-dotenv-plugin
  - serverless-plugin-typescript
  - serverless-offline

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  # IMPORTANT: No VPC configuration here allows Lambda to access internet
  # This enables connections to external services like Supabase
  environment:
    NODE_ENV: ${self:provider.stage}
    STAGE: ${self:provider.stage}
    # Database configuration
    DATABASE_URL: "${env:DATABASE_URL}"
    # Authentication
    JWT_SECRET: "${env:JWT_SECRET}"
    SESSION_SECRET: "${env:SESSION_SECRET}"
    # Google OAuth
    GOOGLE_CLIENT_ID: "${env:GOOGLE_CLIENT_ID}"
    GOOGLE_CLIENT_SECRET: "${env:GOOGLE_CLIENT_SECRET}"
    GOOGLE_CALLBACK_URL: "${env:GOOGLE_CALLBACK_URL}"
    # Frontend URL
    FRONTEND_URL: "${env:FRONTEND_URL}"
    # API Keys
    ANTHROPIC_API_KEY: "${env:ANTHROPIC_API_KEY}"
    GOOGLE_API_KEY: "${env:GOOGLE_API_KEY}"
    # Logging
    LOG_LEVEL: "${env:LOG_LEVEL}"
  # HTTP API CORS configuration
  httpApi:
    cors:
      allowedOrigins:
        - 'https://quizito.vercel.app'
        - 'http://localhost:3000'
        - ${env:FRONTEND_URL, 'http://localhost:3000'}
      allowedHeaders:
        - 'Content-Type'
        - 'Authorization'
        - 'X-Requested-With'
      allowedMethods:
        - 'GET'
        - 'POST'
        - 'PUT'
        - 'DELETE'
        - 'OPTIONS'
      allowCredentials: true
      exposedResponseHeaders:
        - 'Set-Cookie'
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:GetQueueAttributes
          Resource: 
            - !GetAtt QuizGenerationQueue.Arn
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource: "arn:aws:s3:::quizito-uploads-${self:provider.stage}/*"

package:
  patterns:
    - '!./**'
    - 'src/**'
    - 'node_modules/**'
    - 'package.json'
    - '.env'

functions:
  # Auth Service - Handles authentication and user management
  auth-service:
    handler: src/functions/auth/handler.handler
    timeout: 10
    memorySize: 256
    events:
      - httpApi:
          path: /auth/google
          method: GET
      - httpApi:
          path: /auth/google/callback
          method: GET
      - httpApi:
          path: /auth/me
          method: GET
      - httpApi:
          path: /auth/logout
          method: POST
    environment:
      FUNCTION_TYPE: auth

  # Quiz Management Service - Handles CRUD operations for quizzes
  quiz-management-service:
    handler: src/functions/quiz-management/handler.handler
    timeout: 15
    memorySize: 512
    events:
      - httpApi:
          path: /quizzes/my-quizzes
          method: GET
      - httpApi:
          path: /quizzes/{quizId}
          method: GET
      - httpApi:
          path: /quizzes/submit
          method: POST
      - httpApi:
          path: /quizzes/{quizId}
          method: DELETE
    environment:
      FUNCTION_TYPE: quiz-management

  # File Processing Service - Handles PDF uploads and processing
  file-processing-service:
    handler: src/functions/file-processing/handler.handler
    timeout: 30
    memorySize: 1024
    events:
      - httpApi:
          path: /api/upload/pdfs
          method: POST
    environment:
      FUNCTION_TYPE: file-processing

  # Quiz Generation Service - Handles quiz generation requests
  quiz-generation-service:
    handler: src/functions/quiz-generation/handler.handler
    timeout: 30
    memorySize: 512
    events:
      - httpApi:
          path: /quizzes/generate
          method: POST
      - httpApi:
          path: /quizzes/{quizId}/status
          method: GET
    environment:
      FUNCTION_TYPE: quiz-generation
      QUIZ_GENERATION_QUEUE_URL: !Ref QuizGenerationQueue
      DATABASE_URL: "${env:DATABASE_URL}"

  # Quiz Generation Worker - Processes async quiz generation
  quiz-generation-worker:
    handler: src/functions/quiz-generation-worker/handler.handler
    timeout: 300
    memorySize: 1024
    events:
      - sqs:
          arn: !GetAtt QuizGenerationQueue.Arn
          batchSize: 1
    environment:
      FUNCTION_TYPE: quiz-generation-worker
      QUIZ_GENERATION_QUEUE_URL: !Ref QuizGenerationQueue
      ANTHROPIC_API_KEY: "${env:ANTHROPIC_API_KEY}"
      GOOGLE_API_KEY: "${env:GOOGLE_API_KEY}"
      DATABASE_URL: "${env:DATABASE_URL}"

resources:
  Resources:
    # SQS Queue for quiz generation
    QuizGenerationQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: quizito-backend-v2-${self:provider.stage}-QuizGenerationQueue
        VisibilityTimeout: 300
        MessageRetentionPeriod: 1209600 # 14 days
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt QuizGenerationDLQ.Arn
          maxReceiveCount: 3

    # Dead Letter Queue for failed messages
    QuizGenerationDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: quizito-backend-v2-${self:provider.stage}-QuizGenerationDLQ
        MessageRetentionPeriod: 1209600 # 14 days

    # S3 Bucket for file uploads
    QuizitoUploadsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: quizito-uploads-${self:provider.stage}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
              AllowedOrigins:
                - "*"
              MaxAge: 3000

custom:
  typescript:
    webpack: false
    includeModules: false
    excludeDevDependencies: true 